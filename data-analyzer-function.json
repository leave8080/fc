{
  "name": "data-analyzer",
  "runtime": "go",
  "handler": "analyzeData",
  "code": "import (\n    \"fmt\"\n    \"math\"\n    \"sort\"\n)\n\nfunc analyzeData(event interface{}, context map[string]string) interface{} {\n    // 解析输入事件\n    eventMap, ok := event.(map[string]interface{})\n    if !ok {\n        return map[string]interface{}{\"error\": \"Invalid event format\"}\n    }\n\n    // 获取数据数组\n    dataInterface, exists := eventMap[\"numbers\"]\n    if !exists {\n        return map[string]interface{}{\"error\": \"Missing numbers field\"}\n    }\n\n    // 转换为float64切片\n    dataSlice, ok := dataInterface.([]interface{})\n    if !ok {\n        return map[string]interface{}{\"error\": \"Numbers must be an array\"}\n    }\n\n    var numbers []float64\n    for _, v := range dataSlice {\n        if num, ok := v.(float64); ok {\n            numbers = append(numbers, num)\n        } else {\n            return map[string]interface{}{\"error\": \"All elements must be numbers\"}\n        }\n    }\n\n    if len(numbers) == 0 {\n        return map[string]interface{}{\"error\": \"Empty numbers array\"}\n    }\n\n    // 计算统计信息\n    result := calculateStats(numbers)\n    result[\"operation\"] = \"data_analysis\"\n    result[\"processed_by\"] = fmt.Sprintf(\"Go Cloud Function (User: %s)\", context[\"user\"])\n    \n    return result\n}\n\nfunc calculateStats(numbers []float64) map[string]interface{} {\n    n := len(numbers)\n    \n    // 求和\n    sum := 0.0\n    for _, num := range numbers {\n        sum += num\n    }\n    \n    // 平均值\n    mean := sum / float64(n)\n    \n    // 排序用于中位数和四分位数\n    sorted := make([]float64, n)\n    copy(sorted, numbers)\n    sort.Float64s(sorted)\n    \n    // 中位数\n    var median float64\n    if n%2 == 0 {\n        median = (sorted[n/2-1] + sorted[n/2]) / 2\n    } else {\n        median = sorted[n/2]\n    }\n    \n    // 最大值和最小值\n    min := sorted[0]\n    max := sorted[n-1]\n    \n    // 方差和标准差\n    variance := 0.0\n    for _, num := range numbers {\n        variance += math.Pow(num-mean, 2)\n    }\n    variance /= float64(n)\n    stdDev := math.Sqrt(variance)\n    \n    // 四分位数\n    q1 := sorted[n/4]\n    q3 := sorted[3*n/4]\n    \n    return map[string]interface{}{\n        \"count\": n,\n        \"sum\": sum,\n        \"mean\": mean,\n        \"median\": median,\n        \"min\": min,\n        \"max\": max,\n        \"range\": max - min,\n        \"variance\": variance,\n        \"std_deviation\": stdDev,\n        \"q1\": q1,\n        \"q3\": q3,\n        \"iqr\": q3 - q1,\n        \"sorted_data\": sorted,\n    }\n}",
  "timeout": 30,
  "memory": 128,
  "environment": {
    "SERVICE_NAME": "DataAnalyzer",
    "VERSION": "1.0"
  }
} 